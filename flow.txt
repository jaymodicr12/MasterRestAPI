configurations :
--------------------
1. initialized project with npm init
2. installed packages like : npm i -D typescript nodemon ts-node @types/node
3. installed npx tsc --initialized
4. add typescript to package.json
5. setup eslint using command : npm init @eslint/config@latest
6. installed eslint extension 
7. added prettier extension and added prettierrc
8. installed express using : npm i express
9. installed typescript express : npm i -D @types/express

get started :
--------------------
10. added app.ts and setup express will only run server by server.ts
11. added app.js to server and started server on port 3000
12. added "allowImportingTsExtensions": true, to tsconfig.json to get import as ".ts" file
13. added .env to root and installed env package
14. installed npm i -D @types/dotenv
15. added config folder added config.ts and added this code
---------------------------------------------------
    import { config as conf } from "dotenv";
    conf();

    const _config = {
        port: process.env.PORT,
    };

    export const config = Object.freeze(_config);
---------------------------------------------------


connecting DB :
--------------------
16. added db.ts under config folder
17. added mongodb string to .env
18. written db connection and also implemented event emmiting functions for future proof connections

Moving forward error handling :
--------------------
19. will handle the error from a middleware for whole project
20. normal middleware has 3 (req, res, next)
21. error handler contains 4 (error, req, res, next)
22. added package npm i http-errors
23. added npm i -D @types/http-errors

24. in error handling created a middleware named globalErrorHandler.ts to handlke errors globally
25. imported inside app.ts
26.initial setup is completed till here

Created User Controller :
--------------------
27. Never Trust Browser/ Client 
28. three steps are main in handing api : validation, process, response

29. Created UserModel
30. Added into Controller
30. started check if user exist give error user exists
31. start hashing password